{"ast":null,"code":"var _jsxFileName = \"/home/rhibron/image-app/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport Card from \"./Card\";\nimport \"./index.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [images, setImages] = useState([{\n    url: \"http://source.unsplash.com/random/1\"\n  }, {\n    url: \"http://source.unsplash.com/random/2\"\n  }, {\n    url: \"http://source.unsplash.com/random/3\"\n  }, {\n    url: \"http://source.unsplash.com/random/4\"\n  }, {\n    url: \"http://source.unsplash.com/random/5\"\n  }, {\n    url: \"http://source.unsplash.com/random/6\"\n  }]);\n  // Our state containing 6 images\n  // images is our getter, we store the inital valu which is 6 images\n  // setImages is our setter, through setImage when can manipulate our state\n  // in this case we are using setImage to add or remove an image\n\n  // Function for adding a new image\n  const getNewImages = () => {\n    setImages([...images, {\n      url: `http://source.unsplash.com/random/${Math.floor(Math.random() * 100\n      // getting an image with a random en number\n      )}`\n    }]);\n    // with setImages we are setting the state to the previous using spread operator ...images\n    // we are also adding a new image that ends with a random number\n  };\n\n  // Function for removing an image\n  const removeImage = () => {\n    setImages(images.slice(0, -1));\n    // by calling setImages we say that our state (images) will be images - 1\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"hero\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"cardContainer\",\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        images: images\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"btnContainer\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: getNewImages,\n        children: \"Add\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: removeImage,\n        children: \"Remove\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"zfCfzKvdj5/8ywW7j2djZM0a8/s=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","Card","App","images","setImages","url","getNewImages","Math","floor","random","removeImage","slice"],"sources":["/home/rhibron/image-app/src/App.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport Card from \"./Card\";\n\nimport \"./index.css\";\n\nfunction App() {\n  const [images, setImages] = useState([\n    { url: \"http://source.unsplash.com/random/1\" },\n    { url: \"http://source.unsplash.com/random/2\" },\n    { url: \"http://source.unsplash.com/random/3\" },\n    { url: \"http://source.unsplash.com/random/4\" },\n    { url: \"http://source.unsplash.com/random/5\" },\n    { url: \"http://source.unsplash.com/random/6\" },\n  ]);\n  // Our state containing 6 images\n  // images is our getter, we store the inital valu which is 6 images\n  // setImages is our setter, through setImage when can manipulate our state\n  // in this case we are using setImage to add or remove an image\n\n  // Function for adding a new image\n  const getNewImages = () => {\n    setImages([\n      ...images,\n      {\n        url: `http://source.unsplash.com/random/${Math.floor(\n          Math.random() * 100\n          // getting an image with a random en number\n        )}`,\n      },\n    ]);\n    // with setImages we are setting the state to the previous using spread operator ...images\n    // we are also adding a new image that ends with a random number\n  };\n\n  // Function for removing an image\n  const removeImage = () => {\n    setImages(images.slice(0, -1));\n    // by calling setImages we say that our state (images) will be images - 1\n  };\n\n  return (\n    <section className=\"hero\">\n      <div className=\"cardContainer\">\n        <Card images={images} />\n      </div>\n\n      <div className=\"btnContainer\">\n        <button onClick={getNewImages}>Add</button>\n        <button onClick={removeImage}>Remove</button>\n      </div>\n    </section>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,IAAI,MAAM,QAAQ;AAEzB,OAAO,aAAa;AAAC;AAErB,SAASC,GAAG,GAAG;EAAA;EACb,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGJ,QAAQ,CAAC,CACnC;IAAEK,GAAG,EAAE;EAAsC,CAAC,EAC9C;IAAEA,GAAG,EAAE;EAAsC,CAAC,EAC9C;IAAEA,GAAG,EAAE;EAAsC,CAAC,EAC9C;IAAEA,GAAG,EAAE;EAAsC,CAAC,EAC9C;IAAEA,GAAG,EAAE;EAAsC,CAAC,EAC9C;IAAEA,GAAG,EAAE;EAAsC,CAAC,CAC/C,CAAC;EACF;EACA;EACA;EACA;;EAEA;EACA,MAAMC,YAAY,GAAG,MAAM;IACzBF,SAAS,CAAC,CACR,GAAGD,MAAM,EACT;MACEE,GAAG,EAAG,qCAAoCE,IAAI,CAACC,KAAK,CAClDD,IAAI,CAACE,MAAM,EAAE,GAAG;MAChB;MAAA,CACA;IACJ,CAAC,CACF,CAAC;IACF;IACA;EACF,CAAC;;EAED;EACA,MAAMC,WAAW,GAAG,MAAM;IACxBN,SAAS,CAACD,MAAM,CAACQ,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;IAC9B;EACF,CAAC;;EAED,oBACE;IAAS,SAAS,EAAC,MAAM;IAAA,wBACvB;MAAK,SAAS,EAAC,eAAe;MAAA,uBAC5B,QAAC,IAAI;QAAC,MAAM,EAAER;MAAO;QAAA;QAAA;QAAA;MAAA;IAAG;MAAA;MAAA;MAAA;IAAA,QACpB,eAEN;MAAK,SAAS,EAAC,cAAc;MAAA,wBAC3B;QAAQ,OAAO,EAAEG,YAAa;QAAA,UAAC;MAAG;QAAA;QAAA;QAAA;MAAA,QAAS,eAC3C;QAAQ,OAAO,EAAEI,WAAY;QAAA,UAAC;MAAM;QAAA;QAAA;QAAA;MAAA,QAAS;IAAA;MAAA;MAAA;MAAA;IAAA,QACzC;EAAA;IAAA;IAAA;IAAA;EAAA,QACE;AAEd;AAAC,GA/CQR,GAAG;AAAA,KAAHA,GAAG;AAiDZ,eAAeA,GAAG;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}